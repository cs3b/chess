#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.expand_path("../../lib",__FILE__))

require 'pry'
require 'support/read_from_file'
require 'chess_piece_move'
require 'support/board.rb'
require 'figure/knight'
require 'figure/pawn'
require 'figure/king'
require 'figure/bishop'
require 'figure/queen'
require 'figure/rook'
require 'support/fetch_a_class.rb'
class Exercise
  attr_reader :figure_move_class

  include Support::ReadFromFile

  def initialize(figure_move_class)
    @figure_move_class = figure_move_class
  end

  def call
    each_line do |line|
      format_output(calculate_possible_positions(line))
    end
  end

  private

  def format_output(positions)
    positions.join(' ') << "\n"
  end

  def calculate_possible_positions(line)
    ChessPieceMove.new(line, figure_move_class).possible_positions
  end
end

if Support::FetchAClass.new(ARGV[1]).class_valid?
  Exercise.new(Figure::Knight).call
else
  raise "Figure #{ARGV[1]} is not implemented"
end
